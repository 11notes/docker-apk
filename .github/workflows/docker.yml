name: create and publish docker image

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  IMAGE_ARCH: "linux/amd64,linux/arm64"
  TRIVY_DISABLE_VEX_NOTICE: true
  TRIVY_SHOW_SUPPRESSED: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:   
      - uses: actions/checkout@11bd719

      - name: .json to env
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '.json'

      - name: semver tags
        env:
          APP_VERSION: ${{ env.json_version }}
        run: |
          echo "SEMVER_MAJOR=$(awk -F. '{ print $1 }' <<< ${APP_VERSION})" >> $GITHUB_ENV
          echo "SEMVER_MINOR=$(awk -F. '{ print $2 }' <<< ${APP_VERSION})" >> $GITHUB_ENV

      - name: docker hub
        uses: docker/login-action@9780b0c
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: qemu
        uses: docker/setup-qemu-action@v53851d1

      - name: buildx
        uses: docker/setup-buildx-action@6524bf6

      - name: build & scan
        uses: docker/build-push-action@67a2d40
        with:
          context: .
          file: arch.dockerfile
          push: false
          platforms: ${{ env.IMAGE_ARCH }}
          build-args: |
            APP_IMAGE=${{ env.json_image }}
            APP_NAME=${{ env.json_name }}
            APP_VERSION=${{ env.json_version }}
            APP_ROOT=${{ env.json_root }}
          tags: |
            local/dev:${{ env.json_version }}

      - name: grype / scan
        uses: anchore/scan-action@abae793
        with:
          image: local/dev:${{ env.json_version }}
          fail-build: true
          severity-cutoff: high

      - name: grype / report
        uses: github/codeql-action/upload-sarif@48ab28a
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: build & push
        uses: docker/build-push-action@67a2d40
        with:
          context: .
          file: arch.dockerfile
          push: true
          sbom: true
          provenance: mode=max
          platforms: ${{ env.IMAGE_ARCH }}
          cache-from: type=registry,ref=${{ env.json_image }}:buildcache
          cache-to: type=registry,ref=${{ env.json_image }}:buildcache,mode=max,compression=zstd,force-compression=true
          build-args: |
            APP_IMAGE=${{ env.json_image }}
            APP_NAME=${{ env.json_name }}
            APP_VERSION=${{ env.json_version }}
            APP_ROOT=${{ env.json_root }}
          tags: |
            ${{ env.json_image }}:${{ env.SEMVER_MAJOR }}.${{ env.SEMVER_MINOR }}

      - name: create release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} -F RELEASE.md

      - name: update description
        run: |
          curl --request PATCH \
            --url https://api.github.com/repos/${{ github.repository }} \
            --header 'authorization: Bearer ${{ secrets.REPO_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "description":"${{ env.json_description }}",
              "homepage":"",
              "has_issues":true,
              "has_discussions":true,
              "has_projects":false,
              "has_wiki":false
            }' \
            --fail

      - name: push README.md to docker hub
        uses: christian-korneck/update-container-description-action@d360055
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_TOKEN }}
        with:
          destination_container_repo: ${{ env.json_image }}
          provider: dockerhub
          short_description: ${{ env.json_description }}
          readme_file: 'README.md'
